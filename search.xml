<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在 Hexo 部署時自動更新文章的編輯時間</title>
      <link href="/posts/Hexo-auto-modify-updated-time-when-deploy/"/>
      <url>/posts/Hexo-auto-modify-updated-time-when-deploy/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>昨天修改了文章後，發現更新時間沒有跟著改變，查了一下似乎只能自行更改 front-matter （markdown 最上面那一區）裡的 <code>updated</code>。</p><p>但是每次改一篇文章都要手動修改感覺有點蠢，於是我繼續尋找有沒有辦法自動化，最後找到了使用 JavaScript 的方法。以下程式碼修改自原文章，順便做個筆記。</p><h2 id="為現有文章加上-updated">為現有文章加上 updated</h2><p>若文章 front-matter 還沒有 <code>updated</code>，需要手動加入，可以直接複製 <code>date: xxxx-xx-xx xx:xx:xx</code> 這行，然後把 <code>date</code> 改成 <code>updated</code> 就好（之後執行程式會自動修正）。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml">title: 在 Hexo 部署時自動更新文章的編輯時間date: 2023-01-18 15:09:05updated: 2023-01-20 21:33:18categories:  - 架站筆記tags:  - Hexo  - JavaScript</span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改模板">修改模板</h2><p>我們當然不會想要每次都手動加上 <code>updated</code>，因此需要修改模版的 front-matter：</p><pre class="line-numbers language-markdown" data-language="markdown"><div class="caption"><span>post.md</span></div><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml">title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;updated: &#123;&#123; date &#125;&#125;categories:  - tags:  -</span> <span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>這樣以後生成新文章就會自動加上 <code>updated</code> 了。</p><h2 id="自動修改更新日期">自動修改更新日期</h2><p>在 source 裡建立 <code>UpdateFileTime.js</code>：</p><pre class="line-numbers language-javascript" data-language="javascript"><div class="caption"><span>UpdateFileTime.js</span></div><code class="language-javascript"><span class="token hashbang comment">#!/usr/bin/env node</span><span class="token comment">// 自動更新文章的修改時間</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'開始執行'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用於讀寫文件</span><span class="token keyword">var</span> RegExp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(updated:\s*)((\d&#123;2&#125;(([02468][048])|([13579][26]))[\-\/\s]?((((0?[13578])|(1[02]))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\-\/\s]?((0?[1-9])|([1-2][0-9])))))|(\d&#123;2&#125;(([02468][1235679])|([13579][01345789]))[\-\/\s]?((((0?[13578])|(1[02]))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\-\/\s]?((0?[1-9])|(1[0-9])|(2[0-8]))))))(\s((([0-1][0-9])|(2?[0-3]))\:([0-5]?[0-9])((\s)|(\:([0-5]?[0-9])))))</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span><span class="token keyword">let</span> toppath <span class="token operator">=</span> <span class="token string">"./source/_posts/"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span>path <span class="token operator">+</span> item<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">".md"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token function">writeFileTime</span><span class="token punctuation">(</span>path <span class="token operator">+</span> item<span class="token punctuation">,</span> fs<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token function">fn</span><span class="token punctuation">(</span>path <span class="token operator">+</span> item <span class="token operator">+</span> <span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">fn</span><span class="token punctuation">(</span>toppath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">writeFileTime</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> fs</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token string">'utf8'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 讀取文件內容</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"讀取檔案內容錯誤："</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 尋找 updated 字串</span>            fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stats</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token comment">// 讀取文件建立時間等資訊</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"讀取檔案資料錯誤："</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> updateds <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> updated <span class="token operator">=</span> updateds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"updated: "</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 時間格式化為 xxxx/xx/xx xx:xx:xx</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>mtime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>updated<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 只要修改時間和文章內 updated 時間差大於 10 分鍾就觸發更新</span>                    <span class="token keyword">var</span> result <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">,</span> <span class="token string">"updated: "</span> <span class="token operator">+</span> <span class="token function">getFormatDate</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>mtime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 替換更新時間</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>                    fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> result<span class="token punctuation">,</span> <span class="token string">'utf8'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 寫入新的檔案內容</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                        fs<span class="token punctuation">.</span><span class="token function">utimes</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>atime<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>mtime<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 還原訪問時間和修改時間</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"修改時間失敗："</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token string">"成功更新時間"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* timeStr:時間，格式可為："September 16,2016 14:15:05、 "September 16,2016"、"2016/09/16 14:15:05"、"2016/09/16"、 '2014-04-23T18:55:49'和毫秒 dateSeparator：年、月、日之間的分隔符，預設為"-"， timeSeparator：時、分、秒之間的分隔符，預設為":" */</span><span class="token keyword">function</span> <span class="token function">getFormatDate</span><span class="token punctuation">(</span><span class="token parameter">timeStr<span class="token punctuation">,</span> dateSeparator<span class="token punctuation">,</span> timeSeparator</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    dateSeparator <span class="token operator">=</span> dateSeparator <span class="token operator">?</span> dateSeparator <span class="token operator">:</span> <span class="token string">"-"</span><span class="token punctuation">;</span>    timeSeparator <span class="token operator">=</span> timeSeparator <span class="token operator">?</span> timeSeparator <span class="token operator">:</span> <span class="token string">":"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>timeStr<span class="token punctuation">)</span><span class="token punctuation">,</span>        year <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 四位數</span>        month <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// 0-11</span>        day <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token comment">// 1-31</span>        hour <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token comment">// 0-23</span>        minute <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 0-59</span>        seconds <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// 0-59</span>        <span class="token constant">Y</span> <span class="token operator">=</span> year <span class="token operator">+</span> dateSeparator<span class="token punctuation">,</span>        <span class="token constant">M</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>month <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">9</span> <span class="token operator">?</span> <span class="token punctuation">(</span>month <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>month <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> dateSeparator<span class="token punctuation">,</span>        <span class="token constant">D</span> <span class="token operator">=</span> <span class="token punctuation">(</span>day <span class="token operator">></span> <span class="token number">9</span> <span class="token operator">?</span> day <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> day<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' '</span><span class="token punctuation">,</span>        h <span class="token operator">=</span> <span class="token punctuation">(</span>hour <span class="token operator">></span> <span class="token number">9</span> <span class="token operator">?</span> hour <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> hour<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> timeSeparator<span class="token punctuation">,</span>        m <span class="token operator">=</span> <span class="token punctuation">(</span>minute <span class="token operator">></span> <span class="token number">9</span> <span class="token operator">?</span> minute <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> minute<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> timeSeparator<span class="token punctuation">,</span>        s <span class="token operator">=</span> <span class="token punctuation">(</span>seconds <span class="token operator">></span> <span class="token number">9</span> <span class="token operator">?</span> seconds <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> seconds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        formatDate <span class="token operator">=</span> <span class="token constant">Y</span> <span class="token operator">+</span> <span class="token constant">M</span> <span class="token operator">+</span> <span class="token constant">D</span> <span class="token operator">+</span> h <span class="token operator">+</span> m <span class="token operator">+</span> s<span class="token punctuation">;</span>    <span class="token keyword">return</span> formatDate<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="updatefiletime-js-解析">UpdateFileTime.js 解析</h3><p>在這裡做個筆記，避免之後忘了這段程式在做什麼。</p><ul><li><p>Line 5: <code>fs</code> (file system) module 用於讀寫文件。</p></li><li><p>Line 7: <code>updated</code> 與時間格式的正則表達式 (regular expression)，型別是 <code>RegExp</code>。</p><ul><li>若後面加上 g (global) 變成 <code>/.../g</code>，會搜尋所有符合的結果，否則只會搜尋第一個符合的，可以避免文章內的 <code>updated</code> 也被替換。</li></ul></li><li><p>Line 9 ~ 26: 只尋找 <code>source/_post/</code> 內的檔案，只選取 <code>.md</code> 檔，其他檔案跳過，若是目錄則繼續遞迴。選中的檔案進行時間更新。</p><ul><li>Line 11: <code>fs.readdir(path[, options], callback)</code> 讀取資料夾內所有檔案，callback 是參數為 <code>err, data</code> 的 function。</li></ul></li><li><p>Line 30: 需使用 UTF-8 打開，否則可能會編碼錯誤。</p></li><li><p>Line 32 &amp; 35: <code>RegExp.test(str)</code> 可以檢查 <code>str</code> 內是否有符合 <code>RegExp</code> 的部分。<code>str.match(RegExp)</code> 則會回傳一個包含所有符合結果的陣列。</p></li><li><p>Line 33: <code>fs.stat(path[, options], callback)</code> 會回傳一個 <code>fs.Stats</code> 物件，結構如下：</p><pre class="line-numbers language-none"><code class="language-none">Stats &#123;  dev: 16777220,  mode: 33188,  nlink: 1,  uid: 501,  gid: 20,  rdev: 0,  blksize: 4096,  ino: 14214074,  size: 8,  blocks: 8,  atimeMs: 1561174616618.8555,  mtimeMs: 1561174614584,  ctimeMs: 1561174614583.8145,  birthtimeMs: 1561174007710.7478,  atime: 2019-06-22T03:36:56.619Z,  mtime: 2019-06-22T03:36:54.584Z,  ctime: 2019-06-22T03:36:54.584Z,  birthtime: 2019-06-22T03:26:47.711Z&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Line 40: 由於執行這個程式會更動到檔案，因此使用 <code>fs.utimes()</code> 將存取與編輯時間還原成執行前的狀態。</p></li></ul><div class="note default flat"><p>我在寫這段的時候遇到一個笨問題，不管怎麼執行，文章的 <code>updated</code> 都沒有更新，一開始以為是出 bug，上網找了各種方法都沒用。<br>後來發現 VSCode 不會即時同步檔案（我一直以為會），把檔案關掉重開就是正確的結果了。</p></div><h3 id="執行檔案">執行檔案</h3><p>在根目錄執行一次這個檔案並查看效果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> .<span class="token punctuation">\</span>source<span class="token punctuation">\</span>UpdateFileTime.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="在遠端-pull-更新正確時間">在遠端 pull 更新正確時間</h2><div class="note warning flat"><p>使用這段的腳本前提是原始檔案 （至少包含 <code>source/_post/</code>）已經被 git 追蹤，否則不會有效果。</p></div><p>若我們在其他電腦將原始檔案 pull 下來，檔案的最後編輯時間會變成 pull 的時間，會導致執行 <code>UpdateFileTime.js</code> 時全部變成當天的日期，因此在 pull 之後可以執行下面的腳本，將最後編輯時間復原為最後一次 commit 的時間（若檔案沒有被 git 追蹤則不變）。</p><pre class="line-numbers language-bash" data-language="bash"><div class="caption"><span>restoreTime.sh</span></div><code class="language-bash"><span class="token function">git</span> ls-files <span class="token parameter variable">-z</span> <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> path<span class="token punctuation">;</span><span class="token keyword">do</span>    <span class="token function">touch</span> <span class="token parameter variable">-d</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> log <span class="token parameter variable">-1</span> <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">"@%ct"</span> <span class="token string">"<span class="token variable">$path</span>"</span><span class="token variable">)</span></span>"</span> <span class="token string">"<span class="token variable">$path</span>"</span><span class="token punctuation">;</span><span class="token keyword">done</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="note warning flat"><p>Windows 預設的換行格式是 CRLF (<code>\r\n</code>)，請確保將此檔案的換行格式轉為 <strong>LF</strong> (<code>\n</code>)，否則執行時會出現錯誤。</p></div><p>解析：</p><ul><li><p><code>git ls-files</code>: 顯示當前目錄中所有被 git 追蹤的檔案：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> ls-filesaaa.mdbbb.mdccc.md<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>|</code>: pipe，將左邊的輸出作為右邊的輸入。</p><div class="note warning flat"><p>由於 pipe 裡的每個指令都會在獨立的 subshell 執行，因此在 pipe 裡產生的變數不會影響到外部。</p></div></li><li><p><code>read</code>: 讀入資料，分割並分配給後面的變數。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">read</span> var1 var2 <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">"Hello world!"</span>$ <span class="token builtin class-name">echo</span> <span class="token variable">$var1</span><span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> var2Helloworld<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>while read path</code>: 重複「讀取直到換行後傳給變數 <code>path</code>」到輸入結束為止。</p><ul><li><code>do</code>、<code>done</code> 分別為迴圈的開頭與結束。</li></ul></li><li><p><code>touch</code>: 用於更改檔案或目錄的時間戳記，或是建立空檔案。</p><ul><li><code>-d</code>: 設定日期與時間，其中一種格式為，使用 Unix timestamp 前面要加上 <code>@</code>。</li></ul></li><li><p><code>git log</code>: 顯示 commit 紀錄。</p><ul><li><code>-&lt;n&gt;</code>: 顯示最後 n 筆 commit。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> log <span class="token parameter variable">-1</span>commit 8cf50d13ccb7983e8c406573bf834fa9394418aa <span class="token punctuation">(</span>HEAD -<span class="token operator">></span> master<span class="token punctuation">)</span>Author: JHTNT <span class="token operator">&lt;</span>xxxxx@gmail.com<span class="token operator">></span>Date:   Wed Oct <span class="token number">12</span> <span class="token number">16</span>:25:10 <span class="token number">2022</span> +0800    Draft: temp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>--format</code>: 可以自訂輸出的格式，例如：<ul><li><code>%H</code>, <code>%h</code>: 顯示完整 / 簡短的 commit hash 值。</li><li><code>%an</code>: 作者的名字。</li><li><code>%cn</code>: 提交者的名字。</li><li><code>%ct</code>: 以 UNIX timestamp 形式顯示 commit 時間。</li><li><code>%cs</code>: 以 <code>YYYY-MM-DD</code> 形式顯示 commit 時間。</li></ul></li></ul></li></ul><h2 id="一鍵部署">一鍵部署</h2><p>我們可以將 <code>UpdateFileTime.js</code> 與 Hexo 部署的指令寫成一個腳本，方便之後直接一鍵部署。</p><pre class="line-numbers language-batch" data-language="batch"><div class="caption"><span>deploy.bat</span></div><code class="language-batch"><span class="token command"><span class="token keyword">call</span> node .\source\UpdateFileTime.js</span><span class="token command"><span class="token keyword">call</span> hexo clean</span><span class="token command"><span class="token keyword">call</span> hexo generate</span><span class="token command"><span class="token keyword">call</span> hexo deploy</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>之後要部署只需要直接執行 <code>deploy.bat</code> 或在根目錄執行 <code>.\deploy.bat</code> 指令即可。</p><div class="note default flat"><p>若有另外將原始檔案存在另一個 repo 的話，記得在部署之前手動 push 上去就好，可以手動輸入 commit message 方便記錄。雖然最後編輯時間會與 commit 時間有所差別，但這個問題不太好解決，且我覺得不會造成太大的問題，因此就暫時保持這樣。</p></div><h2 id="reference">Reference</h2><ul><li><a href="https://www.anubis.cafe/dde5360c.html">hexo 自动更新文章修改时间 | Anubis的小窝</a></li><li><a href="https://zhuanlan.zhihu.com/p/573210619">hexo 自动更新文章修改时间 - 知乎</a></li><li><a href="https://github.com/theme-next/hexo-theme-next/issues/893">The update time of the article is incorrect · Issue #893 · theme-next/hexo-theme-next</a></li><li><a href="https://git-scm.com/docs/git-ls-files">Git - git-ls-files Documentation</a></li><li><a href="https://stackoverflow.com/questions/5760640/left-side-of-pipe-is-the-subshell">bash - Left side of pipe is the subshell? - Stack Overflow</a></li><li><a href="https://phoenixnap.com/kb/bash-read">How To Use The Bash read Command {10 Examples}</a></li><li><a href="https://stackoverflow.com/questions/57497365/what-does-the-bash-read-d-do">delimiter - What does the bash read -d ‘’ do? - Stack Overflow</a></li><li><a href="https://www.runoob.com/linux/linux-comm-touch.html">Linux touch命令 | 菜鸟教程</a></li><li><a href="https://git-scm.com/docs/git-log">Git - git-log Documentation</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 架站筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 常用語法</title>
      <link href="/posts/Hexo-syntax/"/>
      <url>/posts/Hexo-syntax/</url>
      
        <content type="html"><![CDATA[<p>此頁面為記錄 Hexo 內建的一些特殊語法，方便自己日後查閱。</p><h2 id="note">Note</h2><p>語法：</p><pre class="line-numbers language-none"><code class="language-none">&#123;% note [class] [no-icon] [style] %&#125;content&#123;% endnote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>class  <div class="note default flat"><p>default</p></div>    <div class="note primary flat"><p>primary</p></div>    <div class="note success flat"><p>success</p></div>    <div class="note info flat"><p>info</p></div>    <div class="note warning flat"><p>warning</p></div>    <div class="note danger flat"><p>danger</p></div></li><li>no-icon  <div class="note info no-icon flat"><p>no icon</p></div></li><li>style  <div class="note info simple"><p>simple</p></div>    <div class="note info modern"><p>modern</p></div>    <div class="note info flat"><p>flat</p></div>    <div class="note info disabled"><p>disabled</p></div></li></ul><h2 id="toggle">Toggle</h2><p>語法：</p><pre class="line-numbers language-none"><code class="language-none">&#123;% hideToggle display, bg, color %&#125;content&#123;% endhideToggle %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>display<br>Toggle 的標題，若需要英文逗號 <code>,</code> 則必須用 <code>&amp;sbquo;</code> 代替。</li><li>bg<br>Toggle 標題的<strong>背景</strong>顏色，如 <code>#b85454</code>。</li><li>color<br>Toggle 標題的<strong>文字</strong>顏色，如 <code>#8bd0cb</code>。</li></ul><p>僅 display：</p><details class="toggle" ><summary class="toggle-button" style="">display</summary><div class="toggle-content"><pre class="line-numbers language-none"><code class="language-none">&#123;% hideToggle display %&#125;content&#123;% endhideToggle %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></details><p>加上 bg 與 color：</p><details class="toggle" style="border: 1px solid  #b85454"><summary class="toggle-button" style="background-color:  #b85454;color:  #8bd0cb">display</summary><div class="toggle-content"><pre class="line-numbers language-none"><code class="language-none">&#123;% hideToggle display, #b85454, #8bd0cb %&#125;content&#123;% endhideToggle %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></details><h2 id="label">Label</h2><p>語法：</p><pre class="line-numbers language-none"><code class="language-none">&#123;% label text color %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>color<ul><li><mark class="hl-label default">default</mark> </li><li><mark class="hl-label blue">blue</mark> </li><li><mark class="hl-label pink">pink</mark> </li><li><mark class="hl-label red">red</mark> </li><li><mark class="hl-label purple">purple</mark> </li><li><mark class="hl-label orange">orange</mark> </li><li><mark class="hl-label green">green</mark> </li></ul></li></ul><h2 id="reference">Reference</h2><ul><li><a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安裝文檔(三) 主題配置-1 | Butterfly</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 架站筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>從 Jekyll 到 Hexo</title>
      <link href="/posts/Jekyll-to-Hexo/"/>
      <url>/posts/Jekyll-to-Hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>原本 Jekyll 使用的是 <a href="https://github.com/poole/lanyon">Layon</a> 主題，想著一開始用極簡主題就好，有需要什麼功能再額外加上去。結果東加西加，網站的程式碼變得很雜亂，不如直接換一個主題。</p><p>後來想起之前看過朋友用 <a href="https://hexo.io/zh-tw/">Hexo</a> 架的網站看起來滿漂亮的，可以調整的設定不少，也支援 Markdown。因此打算從 Jekyll 轉換到 Hexo，同時作為一個新的開始。</p><div class="note info flat"><p>以下內容主要參考官方文檔，記錄自己安裝及配置的過程，Butterfly 相關配置在官方文檔都有詳盡的說明，此篇文章只紀錄部分較特別的設定。</p></div><h2 id="安裝">安裝</h2><p>安裝 Hexo 前需要先安裝 <a href="http://nodejs.org/">Node.js</a> （核心部分） 與 git （用於推送網頁）。</p><p>有了 Node.js 後就可以在終端機執行安裝指令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>建立一個資料夾作為 blog 的根目錄，進入該目錄後配置基本檔案：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>folder<span class="token operator">></span>hexo init<span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>安裝完後資料夾內的結構應該會長這樣：</p><pre class="line-numbers language-none"><code class="language-none">.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此時基本配置就完成了。</p><h2 id="選擇主題">選擇主題</h2><p>第一件事當然是要選擇一個順眼的主題，預設的主題是 <a href="https://theme-next.js.org/">NexT</a>，我選擇的是 <a href="https://butterfly.js.org/">Butterfly</a> 主題。除了好看以外，它的官方文檔還是<strong>中文</strong>的，對我這種英文苦手的人來說非常友好。</p><div class="note warning flat"><p>由於不同主題的配置不盡相同，因此更換主題時可能無法完美轉移。</p></div><p>安裝過程可直接參考 butterfly 的<a href="https://butterfly.js.org/posts/21cfbf15/">官方教學</a>。</p><h2 id="開始寫文章">開始寫文章</h2><p>在根目錄中輸入以下指令會自動在 <code>source/_posts/</code> 建立一個新的 Markdown 檔案：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>layout 就是文章的初始佈局，存放在 <code>scaffholds</code> 資料夾中。以 <code>post.md</code> 為例，打開可以看到</p><pre class="line-numbers language-markdown" data-language="markdown"><div class="caption"><span>post.md</span></div><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml">title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tag:</span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>這個以 <code>---</code> 分隔的區塊可以當作是個別頁面的設定檔，以下是常用的變數：</p><ul><li><code>title</code> 標題 （預設為檔名）</li><li><code>data</code> 檔案建立日期</li><li><code>updated</code> 檔案修改日期</li><li><code>tags</code> 標籤</li><li><code>categories</code> 分類</li></ul><h3 id="分類與標籤">分類與標籤</h3><p>在 Hexo 中，分類的順序代表階層性，標籤則沒有差別。例如分類 <code>Foo, Bar</code> 表示文章屬於 Foo 分類下的 Bar 分類，一個頁面可以同時擁有<strong>多個分類與標籤</strong>：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">categories:    <span class="token list punctuation">-</span> [Sports, Baseball]    <span class="token list punctuation">-</span> Diarytags:    <span class="token list punctuation">-</span> Injury    <span class="token list punctuation">-</span> Shocking<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改預設檔案名稱">修改預設檔案名稱</h3><p>當文章數量逐漸增加時，全部塞在同一個資料夾找起來會很困難，因此想找一個能照年份分類的方法。</p><p>如果直接在 <code>source/_posts/2023</code> 裡建立文章，預設產生的文章連結會是 <code>https://jhtnt.github.io/2023/01/11/title</code>。如果想讓文章連結只有標題，例如 <code>https://jhtnt.github.io/posts/title</code>，可以如下修改 <code>_config.yml</code> 的配置。</p><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>_config.yml</span></div><code class="language-yaml"><span class="token key atrule">permalink</span><span class="token punctuation">:</span> posts/<span class="token punctuation">:</span>name/<span class="token key atrule">new_post_name</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>year/<span class="token punctuation">:</span>title.md<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>permalink</code> 指的是文章的永久連結，<code>new_post_name</code> 則是使用指令新增文章時產生的檔名，以下是幾個常用的變數：</p><ul><li><code>:title</code> 文章標題</li><li><code>:name</code> 文章<strong>檔名</strong></li><li><code>:year</code> 文章建立年分 （4 位數）</li><li><code>:month</code> 文章建立月分 （2 位數）</li><li><code>:day</code> 文章建立日期 （2 位數）</li></ul><h2 id="本地預覽">本地預覽</h2><p>有時我們會需要在正式部署前預覽網頁，這時可以使用 Hexo 的指令。</p><h3 id="generate">generate</h3><p>輸入 <code>hexo generate</code> 或 <code>hexo g</code> 可以生成靜態檔案，加上 <code>-w</code> 或 <code>--watch</code> 可以持續監看並即時生成檔案。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generatehexo g <span class="token parameter variable">-w</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="serve">serve</h3><p><code>hexo server</code> 或 <code>hexo s</code> 可以啟動本機伺服器，預設 port 為 <code>http://localhost:4000/</code>。若與其他應用程式的 port 衝突，可以使用 <code>-p</code> 或 <code>--port</code> 來自訂 port。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo servehexo s <span class="token parameter variable">-p</span> <span class="token number">4001</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在 server 啟動期間會持續監測檔案，效果與 <code>hexo g -w</code> 相同。不過似乎與 Jekyll 一樣只會監測 <code>source/</code> 裡的資源，若更改了 <code>_config.yml</code> 等檔案需要重新啟動伺服器才會生效。</p><h3 id="clean">clean</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以清理快取檔案 (<code>db.json</code>) 和已產生的靜態檔案 (<code>public/</code>)。</p><div class="note info flat"><p>若不需要下面的設定，想要直接部署，可跳至 <a href="#%E9%83%A8%E7%BD%B2%E5%88%B0-github-pages">部署到 GitHub Pages</a></p></div><h2 id="自訂漸層背景">自訂漸層背景</h2><p>在 <code>_config.butterfly.yml</code> 中有一項設定是 <code>background</code>，可以設定網站的背景，研究後發現可以使用漸層顏色，於是在 <a href="https://webgradients.com/">WebGradients</a> 找了一個喜歡的顏色貼進設定裡：</p><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>_config.butterfly.yml</span></div><code class="language-yaml"><span class="token key atrule">background</span><span class="token punctuation">:</span> <span class="token string">"linear-gradient(120deg, #fbc2eb 0%, #a6c1ee 100%)"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但當我切換成暗色模式後馬上發現不對勁，由於這個主題的暗色模式會對所有顏色加上一層透明度 70% 的黑色，雖然能減少亮度的刺激，卻導致原本的漸層變得很奇怪，於是我決定寫一個 CSS 檔案覆蓋主題的設定。</p><h3 id="新增自訂-css-檔案">新增自訂 CSS 檔案</h3><p>為了避免在更新主題時意外覆蓋掉自訂的檔案，將檔案放在根目錄的 <code>source/</code> 而不是主題目錄的 <code>source/</code> 會是比較好的選擇。</p><p>首先在建立一個存放 CSS 的資料夾 <code>source/css/</code> 在裡面建立 <code>custom.css</code> （檔名沒有限制）。然後進入 <code>_config.butterfly.yml</code> 找到 <code>inject</code> 並修改 （有兩個不同的 <code>inject</code>，請看註解辨別）：</p><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>_config.butterfly.yml</span></div><code class="language-yaml"><span class="token comment"># Inject</span><span class="token comment"># Insert the code to head (before '&lt;/head>' tag) and the bottom (before '&lt;/body>' tag)</span><span class="token comment"># 插入代碼到頭部 &lt;/head> 之前 和 底部 &lt;/body> 之前</span><span class="token key atrule">inject</span><span class="token punctuation">:</span>  <span class="token key atrule">head</span><span class="token punctuation">:</span>    <span class="token comment"># - &lt;link rel="stylesheet" href="/xxx.css"></span>    <span class="token punctuation">-</span> &lt;link rel="stylesheet" href="/css/custom.css"<span class="token punctuation">></span>  <span class="token key atrule">bottom</span><span class="token punctuation">:</span>    <span class="token comment"># - &lt;script src="xxxx">&lt;/script></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>這樣就會在每個頁面的 <code>&lt;head&gt;</code> 導入這個檔案。</p><h3 id="修改背景顏色">修改背景顏色</h3><p>說回剛剛的背景顏色，找了很久發現是受下面這段 CSS 影響，最終我把透明度調成 <strong>50%</strong>，在不會過亮的情況下還不至於太奇怪。</p><pre class="line-numbers language-css" data-language="css"><div class="caption"><span>custom.css</span></div><code class="language-css"><span class="token selector">[data-theme='dark'] #web_bg:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>改完之後又出現一個問題，文章內部的背景還是黑色的，看起來有點突兀，於是讓它變成有點半透明的效果：</p><pre class="line-numbers language-css" data-language="css"><div class="caption"><span>custom.css</span></div><code class="language-css"><span class="token selector">#recent-posts>.recent-post-item</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.15<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.layout>#post</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.15<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#aside-content .card-widget</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.15<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最後將 footer 變成透明的就成功讓整體顏色一致了：</p><pre class="line-numbers language-css" data-language="css"><div class="caption"><span>custom.css</span></div><code class="language-css"><span class="token selector">#footer</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">[data-theme='dark'] #footer:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自訂程式碼-highlight-主題">自訂程式碼 highlight 主題</h2><p>Hexo 內建提供 highlight.js 與 Prism.js 兩種 highlight 方式，預設是使用 highlight.js。但是 Prism.js 對程式碼的分割更加<strong>細緻</strong>，因此我想改用 Prism.js 順便修改配色。</p><p>首先關閉 <code>highlight</code> 並開啟 <code>prismjs</code>：</p><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>_config.yml</span></div><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>之後在 <code>source/css/</code> 建立一個 CSS 檔案用於存放 highlight 配色，在這個 <a href="https://github.com/PrismJS/prism-themes">github repo</a> 有許多可用於 prismjs 的主題，我選擇的是 <strong>VS Code Dark+</strong>。接著將你要的主題的 CSS 複製到剛才建立的檔案，並在開頭插入這段 code （<code>xxxxxxx</code>） 表示預設顏色：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 新添加的內容  -------------------------------------   --hl-color                  代碼框字體顔色 【必須】 (把下面.hljs的 color複製到這裏來)  --hl-bg                     代碼框背景色 【必須】 (把下面.hljs的 background複製到這裏來)  --hltools-bg: #321a0f       代碼框頂部工具欄背景色 【可選】(如果你關掉了 copy、lang 和 shrink,可不用配置這個）  --hltools-color: #fff       代碼框頂部工具欄字體顔色 【可選】(如果你關掉了 copy、lang 和 shrink,可不用配置這個）  --hlnumber-bg: #221a0f      代碼框行數背景色 【可選】(如果已經關掉 line_number,可以不用配置這個)  --hlnumber-color: #fff      代碼框行數字體顔色 【可選】 (如果已經關掉 line_number,可以不用配置這個)  --hlscrollbar-bg: #d3af86   代碼框滾動條顔色 【可選】（默認為主題主顔色）  --hlexpand-bg: #d3af86      代碼框底部展開背景色 【可選】(如果已經關掉 highlight_height_limit,可以不用配置這個)*/</span><span class="token selector">:root</span> <span class="token punctuation">&#123;</span>    <span class="token property">--hl-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">--hl-bg</span><span class="token punctuation">:</span> #1e1e1e<span class="token punctuation">;</span>    <span class="token property">--hltools-bg</span><span class="token punctuation">:</span> xxxxxxx<span class="token punctuation">;</span>    <span class="token property">--hltools-color</span><span class="token punctuation">:</span> xxxxxxx<span class="token punctuation">;</span>    <span class="token property">--hlnumber-bg</span><span class="token punctuation">:</span> xxxxxxx<span class="token punctuation">;</span>    <span class="token property">--hlnumber-color</span><span class="token punctuation">:</span> xxxxxxxx<span class="token punctuation">;</span>    <span class="token property">--hlscrollbar-bg</span><span class="token punctuation">:</span> xxxxx<span class="token punctuation">;</span>    <span class="token property">--hlexpand-bg</span><span class="token punctuation">:</span> xxxxxxx<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 下面是你所選的配色主題的 CSS */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最後設定好此檔案的 <code>inject</code> 就大功告成了。</p><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>_config.butterfly.yml</span></div><code class="language-yaml"><span class="token key atrule">inject</span><span class="token punctuation">:</span>  <span class="token key atrule">head</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> &lt;link rel="stylesheet" href="/css/vscode_dark_theme.css"<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="增加評論系統">增加評論系統</h2><p>我所選擇的系統是 Waline，主要原因是風格比較符合我的喜好，且可以匿名留言。部署過程不算太難，<a href="https://waline.js.org/guide/get-started">官方文檔</a>有詳盡的教學，此處只簡略描述：</p><h3 id="建立資料庫">建立資料庫</h3><div class="note warning flat"><p>我使用的資料庫是 MongoDB Atlas，並非 Waline 推薦的 LeanCloud，建立資料庫與下面的變數設定見<a href="https://candinya.com/posts/migrate-from-disqus-to-waline/">這篇文章</a>，除了 UI 有些許不同外其餘照著做即可。</p></div><h3 id="部署-vercel">部署 Vercel</h3><p>使用 Waline 文檔提供的連結進入 Vercel 頁面，登入 github 後依照步驟進行第一次部署。然後進入 Setting -&gt; Environment Variables 設定環境變數 （不同資料庫需要設定的環境變數不一樣）。</p><p>最後重新部署後取得 server 端位址，若沒有做額外設定連結應為 <code>https://xxxxx.vercel.app</code>，可以先隨意發一則評論測試是否設定成功。</p><h3 id="開啟-hexo-評論設定">開啟 Hexo 評論設定</h3><p>先指定使用 Waline，開啟 lazyload 則使用者滾動到評論位置時才會開始加載：</p><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>_config.butterfly.yml</span></div><code class="language-yaml"><span class="token key atrule">comments</span><span class="token punctuation">:</span>  <span class="token key atrule">use</span><span class="token punctuation">:</span> Waline  <span class="token key atrule">lazyload</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>再來設定 Waline，除了 Butterfly 主題提供的幾個選項外，可以在 <code>option</code> 下新增 Waline 的<a href="https://waline.js.org/reference/client/props.html">自定義選項</a>。</p><div class="note warning flat"><p>需要特別注意在<a href="https://waline.js.org/cookbook/customize/locale.html">自定义语言</a>這頁的選項都屬於 <code>locale</code> 的子選項，寫法可參考下方的範例。<br><s>（發現選項沒有生效，研究了好幾個小時才發現原因）</s></p></div><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>_config.butterfly.yml</span></div><code class="language-yaml"><span class="token key atrule">waline</span><span class="token punctuation">:</span>  <span class="token key atrule">serverURL</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//xxxxx.vercel.app  <span class="token key atrule">option</span><span class="token punctuation">:</span>    <span class="token key atrule">locale</span><span class="token punctuation">:</span>      <span class="token key atrule">locale</span><span class="token punctuation">:</span>      <span class="token key atrule">mail</span><span class="token punctuation">:</span> 電子信箱      <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> 有任何問題或建議歡迎留言提出 <span class="token comment"># 評論框默認文字</span>      <span class="token key atrule">sofa</span><span class="token punctuation">:</span> 暫無留言 <span class="token comment"># 評論區為空時的顯示文字</span>    <span class="token key atrule">imageUploader</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 上傳圖片功能</span>    <span class="token key atrule">search</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 搜尋 gif 功能</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>這樣就設置完成了。</p><h2 id="渲染-katex">渲染 KaTeX</h2><p>一開始我使用了官方提供的<a href="https://butterfly.js.org/posts/ceeb73f/#Math-%E6%95%B8%E5%AD%B8">方法</a>，然而 <code>hexo-renderer-markdown-it</code> 無法成功渲染，而 <code>hexo-renderer-markdown-it-plus</code> 雖然成功了，但沒辦法顯示斜體感覺怪怪的。</p><p>最後我找到了<a href="https://www.nickxu.top/2022/04/17/Hexo-Butterfly-%E5%BB%BA%E7%AB%99%E6%8C%87%E5%8D%97%EF%BC%88%E5%85%AB%EF%BC%89%E4%BD%BF%E7%94%A8-KaTeX-%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/">這篇文章</a>，安裝 <a href="https://github.com/Abreto/hexo-renderer-markdown-it-katex"><code>hexo-renderer-markdown-it-katex</code></a> 後不需要額外設定即可渲染 KaTeX：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> un hexo-renderer-marked <span class="token parameter variable">--save</span> <span class="token comment"># 移除原本的渲染插件</span><span class="token function">npm</span> i hexo-renderer-markdown-it-katex <span class="token parameter variable">--save</span> <span class="token comment"># 安裝新插件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>KaTex 測試：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub><mo>=</mo><mi>a</mi><mi>n</mi><mo>+</mo><mi>d</mi><mo>⋅</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mstyle></mrow><annotation encoding="application/x-tex">S_{n} = an + d \cdot {\cfrac{n(n-1)}{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.276em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5899999999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p><h2 id="增加搜尋系統">增加搜尋系統</h2><p>實際過程比想像中簡單，若只採用預設設定，只需要安裝 <code>hexo-generator-search</code>，並啟用搜尋功能即可。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>_config.butterfly.yml</span></div><code class="language-yaml"><span class="token key atrule">local_search</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="部署到-github-pages">部署到 GitHub Pages</h2><p>終於將網站都布置好後，就可以準備部署到 github 上了。</p><p>首先在 github 上建立一個 repository，名稱<strong>必須</strong>為 <code>&lt;你的 username&gt;.github.io</code> （全小寫）。</p><p>要部署到 github 有兩種方式：</p><ul><li>GitHub Actions</li><li><code>hexo-deployer-git</code> 插件</li></ul><p>這裡我選擇比較方便使用的後者，首先安裝此插件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再來進行 <code>deploy</code> 的設定，注意 <code>url</code> 最後面不要有 <code>/</code>，<code>repo</code> 的部分，如果你的 username 包含大寫，不需要轉成小寫。</p><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>_config.yml</span></div><code class="language-yaml"><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//&lt;你的小寫 username<span class="token punctuation">></span>.github.io <span class="token comment"># 約在 16 行</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/&lt;你的完整 username<span class="token punctuation">></span>/&lt;剛剛建立的 repository 名稱<span class="token punctuation">></span>.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> gh<span class="token punctuation">-</span>pages<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最後每次部署前輸入以下指令即可：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo generatehexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="note info flat"><p>關於進階的部署（自動修改最後編輯時間）可以參考<a href="../Hexo-auto-modify-updated-time-when-deploy">這篇文章</a>。</p></div><h3 id="另存原始檔案">另存原始檔案</h3><p>由於 Hexo 部署時所產生的是最終的 html 等檔案，若需要在其他電腦編輯，還是使用原始檔案更方便，因此建議另外開一個 repo 儲存新檔案。</p><h2 id="雜項">雜項</h2><p>此處為直接更改到主題檔案的部分，升級後需要重新修改。</p><div class="note warning flat"><p>在更新主題時，需要先將檔案復原再 pull 新版本的主題：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> .<span class="token punctuation">\</span>themes<span class="token punctuation">\</span>butterfly<span class="token punctuation">\</span><span class="token function">git</span> reset HEAD <span class="token parameter variable">--hard</span><span class="token function">git</span> pull<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><ul><li><p>取消當滑鼠放到頭像上會旋轉一圈<br><a href="https://github.com/jerryc127/hexo-theme-butterfly/discussions/878">link</a></p><pre class="line-numbers language-stylus" data-language="stylus"><div class="caption"><span>aside.styl</span></div><code class="language-stylus">&amp;<span class="token punctuation">:</span>hover<span class="token property-declaration"><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token func"><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token unit">deg</span><span class="token punctuation">)</span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2 id="reference">Reference</h2><ul><li><a href="https://hexo.io/zh-tw/docs/">文件 | Hexo</a></li><li><a href="https://ithelp.ithome.com.tw/users/20119486/ironman/2944">試著學 Hexo :: 第 12 屆 iThome 鐵人賽</a></li><li><a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安裝文檔(一) 快速開始 | Butterfly</a></li><li><a href="https://prinsss.github.io/hexo-posts-in-subfolder/">使用子文件夹管理 Hexo 文章且不改变文章永久链接 - PRIN BLOG</a></li><li><a href="https://blog.imzjw.cn/posts/b74f504f/">关于我 Butterfly 主题的所有美化</a></li><li><a href="https://butterfly.js.org/posts/b37b5fe3/">自定義代碼配色 | Butterfly</a></li><li><a href="https://candinya.com/posts/migrate-from-disqus-to-waline/">从Disqus迁移到Waline | 糖菓·部落</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 架站筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Jekyll </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
